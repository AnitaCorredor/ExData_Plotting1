list <- c("GENOTIPO...1","AÑO","GENOTIPO...3","Bloque")
quinua[,list] <- lapply(quinua[,list], as.factor)
library(ggplot2)
library(Hmisc) # install.packages("Hmisc")
library(dplyr)
# pca
pca <- prcomp (quinua, scale=T)
str(pca) # list
str(quinua)
pca_quinua <- quinua[, -c(1:4)]
str(pca_quinua)
# Metric multidimensional scaling
std_quinua <- scale(pca_quinua)
d <- dist(std_quinua, diag = T, upper = T)
d
str(quinua)
# Apply multidimensional scaling
x <- cmdscale(d, k = 13, eig = T)
x
View(x)
# Create a 2-dimentional visulization
xpoints <- x$points[, 1:2]
x <- xpoints[,1]
# Apply multidimensional scaling
x <- cmdscale(d, k = 13, eig = T)
# Create a 2-dimentional visulization
xpoints <- x$points[, 1:2]
X <- xpoints[,1]
X
Y <- xpoints[,2]
plot(X,Y)
install.packages("rattle")
library(rattle)
library(rattle)
data("quinua", package = "rattle")
setwd("~/Dropbox (acorredor)/Carpeta del equipo acorredor/08quinua/")
quinua <- as.data.frame(readxl::read_excel("base de datos para experimento N° 01 - originales prueba.xlsx", sheet ="Datos Consolidado"))
str(quinua)
colnames(quinua)
list <- c("GENOTIPO...1","AÑO","GENOTIPO...3","Bloque")
quinua[,list] <- lapply(quinua[,list], as.factor)
data("quinua", package = "rattle")
str(pca_quinua)
data("pca_quinua", package = "rattle")
dim(quinua)
# data("pca_quinua", package = "rattle")
head(pca_quinua)
# data("pca_quinua", package = "rattle")
library(MASS)
# data("pca_quinua", package = "rattle")
library(MASS)
detach("package:dplyr", unload=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(width = 80)
opts_chunk$set(echo = TRUE, tidy = TRUE, tidy.opts = list(width.cutoff=80), fig.width = 6, fig.height = 6, fig.align = "center")
# install.packages('plyr', repos = "http://cran.us.r-project.org")
setwd("~/Dropbox (acorredor)/Carpeta del equipo acorredor/08quinua/")
quinua <- as.data.frame(readxl::read_excel("base de datos para experimento N° 01 - originales prueba.xlsx", sheet ="Datos Consolidado"))
str(quinua)
colnames(quinua)
list <- c("GENOTIPO...1","AÑO","GENOTIPO...3","Bloque")
quinua[,list] <- lapply(quinua[,list], as.factor)
library(ggplot2)
library(Hmisc) # install.packages("Hmisc")
# library(dplyr)
# data("pca_quinua", package = "rattle")
library(MASS)
quinua.lda <- lda(GENOTIPO...3 ~ ., data = pca_quinua)
quinua.pca <- quinua[,-c(1,2,4)]
quinua.lda <- lda(GENOTIPO...3 ~ ., data = quinua.pca)
quinua.lda
pca_quinua <- quinua[, -c(1:4)]
str(pca_quinua)
pca <- prcomp (pca_quinua, scale=T)
str(pca)
View(pca)
# graph by genotype
pca.color <- rep("firebrick3", nrow(quinua))
colnames(quinua)
levels(quinua$GENOTIPO...3)
plot(pca$x[,1], pca$x[,2], xlab = "PC1 (2.2%)", ylab = "PC2 (2.2%)",
col=quinua$GENOTIPO...3,pch = 19, cex = 1, lty = "solid", lwd = 2 )
levels(quinua$AÑO)
quinua1 <- subset(quinua, AÑO=="2016")
pca_quinua <- quinua1[ , -c(1:4)]
pca <- prcomp (pca_quinua, scale=T)
pca_quinua <- quinua1[ , -c(1:4)]
pca_quinua
View(pca_quinua)
quinua1 <- subset(quinua, AÑO=="2016")
pca_quinua <- quinua1[ , -c(1:4)]
pca <- prcomp (pca_quinua, scale=T)
# identify and discard the columns with constant numbers (needed for PCA to run)
pca_quinua <- quinua1[,apply(quinua1,2,var,na.rm=T ) != 0] # 1,336 53,818
View(plotB)
View(pca_quinua)
# PCA quinua2016
quinua1 <- subset(quinua, AÑO=="2016")
pca_quinua <- quinua1[ , -c(1:4)]
# identify and discard the columns with constant numbers (needed for PCA to run)
pca_quinua2 <- quinua1[,apply(quinua1,2,var,na.rm=T ) != 0]
# PCA quinua2016
quinua1 <- subset(quinua, AÑO=="2016")
quinua2 <- quinua1[ , -c(1:4)]
# identify and discard the columns with constant numbers (needed for PCA to run)
quinua3 <- quinua2[ ,apply(quinua2,2,var,na.rm=T ) != 0]
# pca
pca <- prcomp (quinua3, scale=T)
# graph by genotype
plot(pca$x[,1], pca$x[,2], xlab = "PC1 (2.2%)", ylab = "PC2 (2.2%)",
col=quinua1$GENOTIPO...3,pch = 19, cex = 1, lty = "solid", lwd = 2 )
pca$rotation
pca$sdev
pca
# pca
pca <- prcomp (quinua3, scale=T)
# graph by genotype
plot(pca$x[,1], pca$x[,2], xlab = "PC1", ylab = "PC2",
col=quinua1$GENOTIPO...3,pch = 19, cex = 1, lty = "solid", lwd = 2 )
# PCA quinua2018
quinua1 <- subset(quinua, AÑO=="2018")
quinua2 <- quinua1[ , -c(1:4)]
# pca
pca <- prcomp (quinua2, scale=T)
# graph by genotype
plot(pca$x[,1], pca$x[,2], xlab = "PC1", ylab = "PC2",
col=quinua1$GENOTIPO...3,pch = 19, cex = 1, lty = "solid", lwd = 2 )
colnames(quinua)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(width = 80)
opts_chunk$set(echo = TRUE, tidy = TRUE, tidy.opts = list(width.cutoff=80), fig.width = 6, fig.height = 6, fig.align = "center")
# install.packages('plyr', repos = "http://cran.us.r-project.org")
setwd("~/Dropbox (acorredor)/Carpeta del equipo acorredor/02forestal/")
test1 <- read.csv("01paul.csv")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(width = 80)
opts_chunk$set(echo = TRUE, tidy = TRUE, tidy.opts = list(width.cutoff=80), fig.width = 6, fig.height = 6, fig.align = "center")
# install.packages('plyr', repos = "http://cran.us.r-project.org")
setwd("~/Dropbox (acorredor)/Carpeta del equipo acorredor/02forestal/")
test1 <- read.csv("01paul.csv")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(width = 80)
opts_chunk$set(echo = TRUE, tidy = TRUE, tidy.opts = list(width.cutoff=80), fig.width = 6, fig.height = 6, fig.align = "center")
# install.packages('plyr', repos = "http://cran.us.r-project.org")
setwd("~/Dropbox (acorredor)/Carpeta del equipo acorredor/08quinua/")
quinua <- as.data.frame(readxl::read_excel("base de datos para experimento N° 01 - originales prueba.xlsx", sheet ="Datos Consolidado"))
str(quinua)
colnames(quinua)
list <- c("GENOTIPO...1","AÑO","GENOTIPO...3","Bloque")
quinua[,list] <- lapply(quinua[,list], as.factor)
library(ggplot2)
library(Hmisc) # install.packages("Hmisc")
# library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(width = 80)
opts_chunk$set(echo = TRUE, tidy = TRUE, tidy.opts = list(width.cutoff=80), fig.width = 6, fig.height = 6, fig.align = "center")
# install.packages('plyr', repos = "http://cran.us.r-project.org")
setwd("~/Dropbox (acorredor)/Carpeta del equipo acorredor/08quinua/")
quinua <- as.data.frame(readxl::read_excel("base de datos para experimento N° 01 - originales prueba.xlsx", sheet ="Datos Consolidado"))
str(quinua)
colnames(quinua)
list <- c("GENOTIPO...1","AÑO","GENOTIPO...3","Bloque")
quinua[,list] <- lapply(quinua[,list], as.factor)
library(ggplot2)
library(Hmisc) # install.packages("Hmisc")
# library(dplyr)
summary(quinua)
colnames(quinua)
var_list <- c("NA","NA","NA","NA","LP","DDP","DF","DMF","%M1","%M2","AP","DG","EG","WG","R/PA","R/HA","Sa")
colnames(quinua)
colnames(quinua)
for (i in 5:ncol(quinua)){
cat('\n')
cat("###Este gráfico es para ", var_list[i], '\n')
plotB <- quinua %>% ggplot() +
aes(x = GENOTIPO...3, color = AÑO  , group = AÑO, y = quinua[ ,i] ) +
stat_summary(fun = mean, geom = "point", size= 2) +
stat_summary(fun = mean, geom = "line", size= 1) +
stat_summary(fun.data = mean_se)+
ylab( var_list[i])
print(plotB)
cat('\n')
}
library(dplyr)
colnames(quinua)
for (i in 5:ncol(quinua)){
cat('\n')
cat("###Este gráfico es para ", var_list[i], '\n')
plotB <- quinua %>% ggplot() +
aes(x = GENOTIPO...3, color = AÑO  , group = AÑO, y = quinua[ ,i] ) +
stat_summary(fun = mean, geom = "point", size= 2) +
stat_summary(fun = mean, geom = "line", size= 1) +
stat_summary(fun.data = mean_se)+
ylab( var_list[i])
print(plotB)
cat('\n')
}
colnames(quinua)
for (i in 5:ncol(quinua)){
cat('\n')
cat("###Este gráfico es para ", var_list[i], '\n')
plotB <- quinua %>% ggplot() +
aes(x = GENOTIPO...3, color = AÑO  , group = AÑO, y = quinua[ ,i] ) +
stat_summary(fun = mean, geom = "point", size= 2) +
stat_summary(fun = mean, geom = "line", size= 1) +
stat_summary(fun.data = mean_se)+
ylab( var_list[i])
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
print(plotB)
cat('\n')
}
# theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(width = 80)
opts_chunk$set(echo = TRUE, tidy = TRUE, tidy.opts = list(width.cutoff=80), fig.width = 6, fig.height = 6, fig.align = "center")
# install.packages('plyr', repos = "http://cran.us.r-project.org")
setwd("~/Dropbox (acorredor)/Carpeta del equipo acorredor/02forestal/")
library(readxl) # install.packages("readxl")
dgmvivero <- as.data.frame(readxl::read_excel("datos de articulo 2020 douglasina - Rosario.xlsx", sheet ="Morfologico vivero Dg"))
dgnvivero <- as.data.frame(readxl::read_excel("datos de articulo 2020 douglasina - Rosario.xlsx", sheet ="NUTRI en vivero Dg"))
vivero02 <- as.data.frame(readxl::read_excel("datos de articulo 2020 douglasina - Rosario.xlsx", sheet ="Evaluación en campo Dg"))
table(vivero02$Riego)
# list <- c("Tratamientos","Tamaño de contenedor","Fertilización","Riego")
# dgcampo[,list] <- lapply(dgcampo[,list], as.factor)
#dgm
var_list1 <- c( "NA","NA","NA","NA", "diametro base","Altura", "volumen biomasa foliar", "Peso seco de la biomasa aerea",
"volumen biomasa radicular", "peso seco de biomasa radicular", "Indice tallo Raiz (ITR)",
"Indice de calidad de Dickson (QI)", "ICR" )
#dgn
var_list2 <- c("NA","NA","NA","NA", "N %", "P  ppm", "K  ppm", "Ca  ppm","Mg  ppm","S  ppm", "Na  ppm",
"Fe  ppm","Zn  ppm","Mn  ppm","Cu  ppm", "B  ppm", "Prolina"  )
#dgcampo
var_list <- c("NA","NA","NA","NA","Diametro (ml)","Altura (Cm)","Calidad 1",  "Calidad 2", "Calidad 3",
"Porcentaje de supervivencia", "Micorrización (%)","Numero de estomas","Lignificación (%)")
library(ggplot2)
library(Hmisc) # install.packages("Hmisc")
library(dplyr)
# data name: vivero02 var_list
<style>
warning()
warning()
warnings()
install.packages("cowsay")
cowsay::animals
say(what = "fortune",
by = sample(names_safe, 1),
what_color = rgb(.1, .2, .3),
by_color = sample(colors(), 5),
type = "message")
cow <- animals[['cow']]
cat cow
library(cowsay)
sort(names(animals))
cow <- animals[['cow']]
cat cow
cow <- animals[['cow']]
cat cowsay::say("muuu")
cowsay::say("muuu")
getwd)
getwd()
seq(1,200,10)
table()
library(swirl)
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
#----------------------------------------------------#
# READ DATA
#----------------------------------------------------#
setwd("/Users/user/Desktop/task1")
# read the data from specific dates
library(sqldf) # in order to query data by range of dates
query <- "select * from file WHERE Date ='1/2/2007' OR  Date='2/2/2007'"
data <- read.csv.sql("household_power_consumption.txt", sql= query, sep = ";")
#----------------------------------------------------#
# PLOT 2
#----------------------------------------------------#
data$Date <- as.Date(data$Date, "%d/%m/%Y")
plot(data$Date, data$Global_active_power)
#-------------------------------------------------------------------#
# PLOT 2
#-------------------------------------------------------------------#
data$Date <- as.Date(data$Date, "%d/%m/%Y")
data$Time <-
plot(data$Time, data$Global_active_power)
data$Time <-
head(data[,1:2])
data$Time <-
head(data[1:6,1:2])
str(data)
data$Time <- strptime(data$Time, "%H:%M:%S")
plot(data$Time, data$Global_active_power)
plot(data$Time, data$Global_active_power, type = "l")
query <- "select * from file WHERE Date ='1/2/2007' OR  Date='2/2/2007'"
data <- read.csv.sql("household_power_consumption.txt", sql= query, sep = ";")
#-------------------------------------------------------------------#
# PLOT 2
#-------------------------------------------------------------------#
data$DateTime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
#-------------------------------------------------------------------#
# PLOT 2
#-------------------------------------------------------------------#
data$DateTime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
head(data[,1:3])
dim(data)
head(data[,1:2,10])
head(data[,c(1:2,10)])
str(data$DateTime)
plot(data$DateTime, data$Global_active_power, type = "l")
plot(data$DateTime, data$Global_active_power, type = "l",
xlab = NULL, ylab = "Global Active Power (kilowatts)")
plot(data$DateTime, data$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
str(data)
names(data)
#-------------------------------------------------------------------#
# PLOT 3
#-------------------------------------------------------------------#
test <- tidyr::gather(data,"class","value", 7:9 )
names(data)
#-------------------------------------------------------------------#
# PLOT 3
#-------------------------------------------------------------------#
data
#-------------------------------------------------------------------#
# PLOT 3
#-------------------------------------------------------------------#
data <- as.data.frame(data)
str(data)
str(data$DateTime)
test <- tidyr::gather(data,"class","value", 6:8 )
data$DateTime <- as.POSIXct(data$DateTime)
str(data$DateTime)
test <- tidyr::gather(data,"class","value", 7:9 )
str(test)
dim(test)
test <- data[, c(7:10)]
dim(test)
head(test)
newdata <- melt(test)
newdata <- melt(test, test$DateTime)
library(reshape2)
newdata <- melt(test, test$DateTime)
newdata <- melt(test, "DateTime")
head(newdata)
summary(newdata)
#----------------------------------------------------#
# READ DATA
#----------------------------------------------------#
setwd("/Users/user/Desktop/task1")
data <- read.csv.sql("household_power_consumption.txt", sql= query, sep = ";")
newdata <- melt(data[, c(7:10)], "DateTime")
test <- data[, c(7:10)]
#-------------------------------------------------------------------#
# PLOT 3
#-------------------------------------------------------------------#
data$DateTime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
newdata <- melt(data[, c(7:10)], "DateTime")
newdata <- melt(data[, c(7:10)], "DateTime")
data$DateTime <- as.POSIXct(data$DateTime)
newdata <- melt(data[, c(7:10)], "DateTime")
head(newdata)
plot(data$DateTime, data$value, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
plot(data$DateTime, data$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col= "red")
lines(data$DateTime, data$Sub_metering_3, col= "blue")
legend("topright", lty=1, col=c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$DateTime, data$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col= "red")
lines(data$DateTime, data$Sub_metering_3, col= "blue")
legend("topright", lty=c(1,1,1), col=c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$DateTime, data$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col= "red")
lines(data$DateTime, data$Sub_metering_3, col= "blue")
legend("topright",
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty=c(1,1,1),
col=c("black", "red", "blue")
)
#-------------------------------------------------------------------#
# PLOT 4
#-------------------------------------------------------------------#
setwd("/Users/user/Desktop/task1")
plot(data$DateTime,
data$Global_active_power,
pch=NA,
xlab="",
ylab="Global Active Power (kilowatts)")
lines(data$DateTime, data$Global_active_power)
plot(data$DateTime, data$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
plot(data$DateTime,
data$Global_active_power,
xlab="",
ylab="Global Active Power (kilowatts)")
plot(data$DateTime,
data$Global_active_power,
type = "l"
xlab="",
ylab="Global Active Power (kilowatts)")
plot(data$DateTime,
data$Global_active_power,
type = "l",
xlab="",
ylab="Global Active Power (kilowatts)")
# plot 2
plot(data$DateTime, data$Voltage,type='l',ylab='Voltage',xlab='datetime')
# plot 4
plot(data$DateTime, data$Global_reactive_power,type= "l" ,xlab= "datetime")
# plot 3
plot(data$DateTime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col= "red")
lines(data$DateTime, data$Sub_metering_3, col= "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty=c(1,1,1), col=c("black", "red", "blue"))
# plot 3
plot(data$DateTime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col= "red")
lines(data$DateTime, data$Sub_metering_3, col= "blue")
legend ('topright', legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_2'),
lwd=c(1,1,1),col=c('black','red','blue'),bty='n',pt.cex=.5)
plot(data$DateTime, data$Sub_metering_1 ,type='l',ylab='Energy sub metering',xlab='')
lines(data$DateTime, data$Sub_metering_2)
lines(data$DateTime, data$Sub_metering_3)
getwd()
query <- "select * from file WHERE Date ='1/2/2007' OR  Date='2/2/2007'"
data <- read.csv.sql("household_power_consumption.txt", sql= query, sep = ";")
png(filename = "plot1.png", width=480, height=480, units="px")
hist(data$Global_active_power, main='Global Active Power', xlab="Global Active Power (kilowatts)",col='red')
dev.off()
data$DateTime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
png(filename = "plot2.png", width=480, height=480, units="px")
plot(data$DateTime, data$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
dev.off()
png(filename = "plot3.png", width=480, height=480, units="px")
plot(data$DateTime, data$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col= "red")
lines(data$DateTime, data$Sub_metering_3, col= "blue")
legend("topright",
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty=c(1,1,1), col=c("black", "red", "blue"))
dev.off()
png(filename = "plot4.png", width=480, height=480, units="px")
# Configure multiplot
par(mfrow=c(2,2))
# plot 1
plot(data$DateTime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
# plot 2
plot(data$DateTime, data$Voltage, type="l", xlab= "datetime", ylab= "Voltage")
# plot 3
plot(data$DateTime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col= "red")
lines(data$DateTime, data$Sub_metering_3, col= "blue")
legend ('topright', legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_2'),
lwd=c(1,1,1),col=c('black','red','blue'),bty='n',pt.cex=.5)
# plot 4
plot(data$DateTime, data$Global_reactive_power,type= "l" ,xlab= "datetime")
dev.off()
setwd("/Users/user/Desktop/task1/ExData_Plotting1")
#-------------------------------------------------------------------#
# plot
#-------------------------------------------------------------------#
png(filename = "plot1.png", width=480, height=480, units="px")
hist(data$Global_active_power, main='Global Active Power', xlab="Global Active Power (kilowatts)",col='red')
dev.off()
# plot
#-------------------------------------------------------------------#
png(filename = "plot2.png", width=480, height=480, units="px")
plot(data$DateTime, data$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
dev.off()
png(filename = "plot3.png", width=480, height=480, units="px")
plot(data$DateTime, data$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col= "red")
lines(data$DateTime, data$Sub_metering_3, col= "blue")
legend("topright",
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty=c(1,1,1), col=c("black", "red", "blue"))
dev.off()
png(filename = "plot4.png", width=480, height=480, units="px")
# Configure multiplot
par(mfrow=c(2,2))
# plot 1
plot(data$DateTime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
# plot 2
plot(data$DateTime, data$Voltage, type="l", xlab= "datetime", ylab= "Voltage")
# plot 3
plot(data$DateTime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(data$DateTime, data$Sub_metering_2, col= "red")
lines(data$DateTime, data$Sub_metering_3, col= "blue")
legend ('topright', legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_2'),
lwd=c(1,1,1),col=c('black','red','blue'),bty='n',pt.cex=.5)
# plot 4
plot(data$DateTime, data$Global_reactive_power,type= "l" ,xlab= "datetime")
dev.off()
